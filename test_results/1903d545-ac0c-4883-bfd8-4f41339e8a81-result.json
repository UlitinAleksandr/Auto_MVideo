{"name": "test_enter_user_and_buy_iphone13pro", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=107.0.5304.107)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00FDACD3+2075859]\n\tOrdinal0 [0x00F6EE61+1633889]\n\tOrdinal0 [0x00E6B7BD+571325]\n\tOrdinal0 [0x00E6E374+582516]\n\tOrdinal0 [0x00E6E225+582181]\n\tOrdinal0 [0x00E6E4C0+582848]\n\tOrdinal0 [0x00EA127F+791167]\n\tOrdinal0 [0x00E9F4AC+783532]\n\tOrdinal0 [0x00E9D0AB+774315]\n\tOrdinal0 [0x00E9BD37+769335]\n\tOrdinal0 [0x00E91C76+728182]\n\tOrdinal0 [0x00EB731C+881436]\n\tOrdinal0 [0x00E915BF+726463]\n\tOrdinal0 [0x00EB7534+881972]\n\tOrdinal0 [0x00ECB56A+963946]\n\tOrdinal0 [0x00EB7136+880950]\n\tOrdinal0 [0x00E8FEFD+720637]\n\tOrdinal0 [0x00E90F3F+724799]\n\tGetHandleVerifier [0x0128EED2+2769538]\n\tGetHandleVerifier [0x01280D95+2711877]\n\tGetHandleVerifier [0x0106A03A+521194]\n\tGetHandleVerifier [0x01068DA0+516432]\n\tOrdinal0 [0x00F7682C+1665068]\n\tOrdinal0 [0x00F7B128+1683752]\n\tOrdinal0 [0x00F7B215+1683989]\n\tOrdinal0 [0x00F86484+1729668]\n\tBaseThreadInitThunk [0x7532FEF9+25]\n\tRtlGetAppContainerNamedObjectPath [0x774B7BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x774B7B8E+238]", "trace": "set_up = None\n\n    @pytest.mark.run(order=10)\n    @allure.description(\"test enter user and buy iphone13pro\")\n    def test_enter_user_and_buy_iphone13pro(set_up):\n>       Main_Pages_class.enter_user_and_buy_iphone13pro()\n\ntests\\test_main_page.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:286: in enter_user_and_buy_iphone13pro\n    self.click_button_go_to_design()\npages\\basket_page.py:160: in click_button_go_to_design\n    self.get_button_go_to_design().click()\n..\\auto_Vse_Instr\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:88: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\auto_Vse_Instr\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:396: in _execute\n    return self._parent.execute(command, params)\n..\\auto_Vse_Instr\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002178AB4FA90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is n...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x774B7BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x774B7B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: chrome=107.0.5304.107)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00FDACD3+2075859]\nE       \tOrdinal0 [0x00F6EE61+1633889]\nE       \tOrdinal0 [0x00E6B7BD+571325]\nE       \tOrdinal0 [0x00E6E374+582516]\nE       \tOrdinal0 [0x00E6E225+582181]\nE       \tOrdinal0 [0x00E6E4C0+582848]\nE       \tOrdinal0 [0x00EA127F+791167]\nE       \tOrdinal0 [0x00E9F4AC+783532]\nE       \tOrdinal0 [0x00E9D0AB+774315]\nE       \tOrdinal0 [0x00E9BD37+769335]\nE       \tOrdinal0 [0x00E91C76+728182]\nE       \tOrdinal0 [0x00EB731C+881436]\nE       \tOrdinal0 [0x00E915BF+726463]\nE       \tOrdinal0 [0x00EB7534+881972]\nE       \tOrdinal0 [0x00ECB56A+963946]\nE       \tOrdinal0 [0x00EB7136+880950]\nE       \tOrdinal0 [0x00E8FEFD+720637]\nE       \tOrdinal0 [0x00E90F3F+724799]\nE       \tGetHandleVerifier [0x0128EED2+2769538]\nE       \tGetHandleVerifier [0x01280D95+2711877]\nE       \tGetHandleVerifier [0x0106A03A+521194]\nE       \tGetHandleVerifier [0x01068DA0+516432]\nE       \tOrdinal0 [0x00F7682C+1665068]\nE       \tOrdinal0 [0x00F7B128+1683752]\nE       \tOrdinal0 [0x00F7B215+1683989]\nE       \tOrdinal0 [0x00F86484+1729668]\nE       \tBaseThreadInitThunk [0x7532FEF9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x774B7BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x774B7B8E+238]\n\n..\\auto_Vse_Instr\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:243: StaleElementReferenceException"}, "description": "test enter user and buy iphone13pro", "steps": [{"name": "enter user and buy iphone13pro", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=107.0.5304.107)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00FDACD3+2075859]\n\tOrdinal0 [0x00F6EE61+1633889]\n\tOrdinal0 [0x00E6B7BD+571325]\n\tOrdinal0 [0x00E6E374+582516]\n\tOrdinal0 [0x00E6E225+582181]\n\tOrdinal0 [0x00E6E4C0+582848]\n\tOrdinal0 [0x00EA127F+791167]\n\tOrdinal0 [0x00E9F4AC+783532]\n\tOrdinal0 [0x00E9D0AB+774315]\n\tOrdinal0 [0x00E9BD37+769335]\n\tOrdinal0 [0x00E91C76+728182]\n\tOrdinal0 [0x00EB731C+881436]\n\tOrdinal0 [0x00E915BF+726463]\n\tOrdinal0 [0x00EB7534+881972]\n\tOrdinal0 [0x00ECB56A+963946]\n\tOrdinal0 [0x00EB7136+880950]\n\tOrdinal0 [0x00E8FEFD+720637]\n\tOrdinal0 [0x00E90F3F+724799]\n\tGetHandleVerifier [0x0128EED2+2769538]\n\tGetHandleVerifier [0x01280D95+2711877]\n\tGetHandleVerifier [0x0106A03A+521194]\n\tGetHandleVerifier [0x01068DA0+516432]\n\tOrdinal0 [0x00F7682C+1665068]\n\tOrdinal0 [0x00F7B128+1683752]\n\tOrdinal0 [0x00F7B215+1683989]\n\tOrdinal0 [0x00F86484+1729668]\n\tBaseThreadInitThunk [0x7532FEF9+25]\n\tRtlGetAppContainerNamedObjectPath [0x774B7BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x774B7B8E+238]\n\n", "trace": "  File \"C:\\Users\\satanavsarae\\PycharmProjects\\Auto_MVideo_single_test\\pages\\main_page.py\", line 286, in enter_user_and_buy_iphone13pro\n    self.click_button_go_to_design()\n  File \"C:\\Users\\satanavsarae\\PycharmProjects\\Auto_MVideo_single_test\\pages\\basket_page.py\", line 160, in click_button_go_to_design\n    self.get_button_go_to_design().click()\n  File \"C:\\Users\\satanavsarae\\PycharmProjects\\auto_Vse_Instr\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 88, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\satanavsarae\\PycharmProjects\\auto_Vse_Instr\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 396, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Users\\satanavsarae\\PycharmProjects\\auto_Vse_Instr\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\satanavsarae\\PycharmProjects\\auto_Vse_Instr\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 243, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1668443217370, "stop": 1668443288700}], "start": 1668443217370, "stop": 1668443288710, "uuid": "1fa60d05-bf50-4e8e-820b-cef07a37e8e6", "historyId": "a8f10311e301cae5c5bf4dd2698b5bfc", "testCaseId": "d43f13ed3f765fc64b2fc3029354388a", "fullName": "tests.test_main_page#test_enter_user_and_buy_iphone13pro", "labels": [{"name": "tag", "value": "run(order=10)"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "host", "value": "LAPTOP-Q3SB05RC"}, {"name": "thread", "value": "15036-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page"}]}